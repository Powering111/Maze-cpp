#include <iostream>
#include <cmath>
#include <conio.h>
#include <stdlib.h>
#include <windows.h>

char OriginalMaze[50][50]=
{
    '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',
    '#','E','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','S','#',
    '#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#','#',' ','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#',
    '#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',
    '#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#','#',' ','#','#','#','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',
    '#',' ','#','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',
    '#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#','#',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#','#','#','#','#',' ','#','#','#',' ','#',' ','#','#',' ','#',' ','#',
    '#',' ','#',' ','#','#','#','#','#',' ','#',' ','#',' ','#',' ',' ','#','#','#','#','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#',
    '#',' ','#',' ','#',' ',' ',' ','#',' ','#','#','#',' ','#','#',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#',' ','#',' ','#','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#','#','#','#','#','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',
    '#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',
    '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#',
    '#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',
    '#',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',
    '#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',
    '#',' ','#',' ','#','#','#','#','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',
    '#',' ','#',' ','#',' ','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ',' ',' ','#',
    '#',' ','#',' ','#',' ','#','#','#','#','#','#','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ',' ','#',' ',' ','#',' ','#','#','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ',' ',' ','#',
    '#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#','#','#',' ','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ',' ',' ','#',
    '#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#','#','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#','#','#',' ','#','#','#','#','#','#',' ','#',' ',' ',' ','#',
    '#',' ','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#',' ','#',
    '#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#',
    '#',' ','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#',' ','#',
    '#',' ','#',' ',' ',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#','#','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ','#',
    '#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ','#',' ','#',
    '#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ','#',
    '#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',
    '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',
};
char VisionMaze[100][100];
int SizeofMaze=50;
struct xy {int x; int y;};
xy player, startpoint, endpoint;
int VisionDistance = 4;

////////////////////////////////////////////////////////////////////////
void setCursorPosition(int x, int y)
{
    static const HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);
    std::cout.flush();
    COORD coord = { (SHORT)x, (SHORT)y };
    SetConsoleCursorPosition(hOut, coord);
}

void preTEST()
{
    for(int i=0;i<SizeofMaze;i++)
    {
        for(int j=0;j<SizeofMaze;j++)
        {
            if(OriginalMaze[i][j]=='S') {startpoint.x=j; startpoint.y=i;}
            if(OriginalMaze[i][j]=='E') {endpoint.x=j; endpoint.y=i;}
        }
    }
    player.x=startpoint.x; player.y=startpoint.y;
}
void synchro()
{
    for(int i=0;i<SizeofMaze;i++)
    {
        for(int j=0;j<SizeofMaze;j++) VisionMaze[i][j]=' ';
    }
    for(int i=0;i<SizeofMaze;i++)
    {
        for(int j=0;j<SizeofMaze;j++) if(sqrt((pow(player.x-j,2))+(pow(player.y-i,2))) <= VisionDistance) VisionMaze[i][j]=OriginalMaze[i][j];
    }
    VisionMaze[player.y][player.x]='P';
    VisionMaze[endpoint.y][endpoint.x]='E';
    setCursorPosition(0,0);
    //for(int i=0;i<SizeofMaze*(SizeofMaze+1);i++) printf("\b");
    //system("cls");

    for(int i=0;i<SizeofMaze;i++)
    {
        for(int j=0;j<SizeofMaze;j++) std::cout<<VisionMaze[i][j]<<" ";
        std::cout<<" "<<std::endl;
    }
}
void Goandshow(char a)
{
    if(a==119)
    {
        if(OriginalMaze[player.y-1][player.x]==' '||OriginalMaze[player.y-1][player.x]=='S'||OriginalMaze[player.y-1][player.x]=='E') player.y-=1;
        synchro();
    }
    else if(a==97)
    {
        if(OriginalMaze[player.y][player.x-1]==' '||OriginalMaze[player.y][player.x-1]=='S'||OriginalMaze[player.y][player.x-1]=='E') player.x-=1;
        synchro();
    }
    else if(a==115)
    {
        if(OriginalMaze[player.y+1][player.x]==' '||OriginalMaze[player.y+1][player.x]=='S'||OriginalMaze[player.y+1][player.x]=='E') player.y+=1;
        synchro();
    }
    else if(a==100)
    {
        if(OriginalMaze[player.y][player.x+1]==' '||OriginalMaze[player.y][player.x+1]=='S'||OriginalMaze[player.y][player.x+1]=='E') player.x+=1;
        synchro();
    }

}

int getCommand()
{
    if(_kbhit()) {
        return _getch();
    }

    return -1;
}
//////////////////////////////////////////////////////////////////////////
int main()
{
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    
    system("MODE CON COLS=150 LINES=100");
    preTEST();
    synchro();

    for(;;)
    {
        Goandshow(getCommand());
        if(player.x==endpoint.x&&player.y==endpoint.y) break;
    }

    setCursorPosition(0,0);
    for(int i=0;i<SizeofMaze;i++)
    {
        for(int j=0;j<SizeofMaze;j++) std::cout<<OriginalMaze[i][j]<<" ";
        std::cout<<" "<<std::endl;
    }

    Sleep(3000);
}
